{
    "website_title": "blog by willwam845",
    "website_url": "http://localhost:4000/",
    "posts": [
        
            {
                "title": "pbctf 2020 writeups",
                "content_text": "ill add the rest later i cba rnGCombo - miscOne day I spied out my friend accessing some google form to enter his secret combination lock. Afterwards, I kept bothering him about it, and he finally decided to give the link to me. Maybe you can figure out his combo for me and get a tasty flag in return:By: theKidOfArcranialinkSurvey?This challenge presents us with a Google Forms site. This is typical for a survey challenge, and so we start by carrying out a KPBSA (known plaintext survey blood attack). We know the flag format is pbctf{text_here}, and so we search for this in the source.Upon doing so, we see that the flag is pbctf{&lt;digits you got along the way&gt;_&lt;password&gt;}Now, this was not the actual flag, and this is because we need to actually find these things in the Google Forms.We see that the Google Form itself prompts us with a selection screen with a “combination lock”. This is where the actual challenge begins.A quick guide to Google FormsThe whole reason why our KPBSA works is because Google Forms stores the data of the survey in the source of the html page, meaning that, if there are multiple sections to the form, you can see the oother sections before you complete the first.Google Forms also has a functionality, which allows you to, based on a user’s response, give them a section of the survey. The challenge uses this in order to “check” our password.But how does the form know what options lead where?Well, if we look at the survey itself, we see that each number option has a number after it.Notice how after the 5, the number is different from the rest? This means that the location is different to all the others, and we can therefore assume that “5” is the first character of our pin.But now where do we go?We need to find some way to figure out where this takes us, and what the number means. To do this, I’m going to do some local testing.I created this very simple form, which only has one question. It redirects to the next section if you pick “no”, redirects back to the same section if you select “yes”, and redirects to the third section if you pick “maybe”.We can now take a look at the public data created from this Google Form[null,[\"\",[[2007564277,\"is it\",null,2,[[1668954036,[[\"yes\",null,-1,null,0],[\"no\",null,1475128018,null,0],[\"maybe\",null,2106518918,null,0]],0,null,null,null,null,null,0]]],[1475128018,\"Flag\",\"wow its a flag well done\",8],[2106518918,\"i hate you\",null,8]],null,null,null,[0,0],null,[1,\"\"],\"is stego bad\",48,[null,null,null,null,0],null,null,null,null,[2]]Notice the numbers after the “no” option and “maybe” option, which should redirect us to sections 2 and 3, are the same as the numbers before the texts of those sections? Now we have a way to get where an option will lead!Solving the challengeFirstly, we know that the flag is the series of digits followed by some sort of password, so we start by trying to look for this password.We, after briefly scrolling through the html, find this line.That’s most likely our password! And notice how it also has a section number, meaning that we can trace where it came from.751651474 &gt; ?Searching for this number in the code, we find that it takes us to this section if we enter a “0” as the last digit of our pin.Now the path is quite clear, we need to go back and retrieve all the digits by working backwards using the section numbers as our guide.We do this to get:751651474 &gt; 1385363611 - digit 01385363611 &gt; 1566374398 - digit 71566374398 &gt; 46599266 - digit 346599266 &gt; 1138684813 - digit 31138684813 &gt; 1996292448 - digit 91996292448 &gt; 1737460359 - digit 61737460359 &gt; 147720654 - digit 2147720654 &gt; 1094087816 - digit 11094087816 &gt; 1114266997 - digit 81114266997 &gt; 938169490 - digit 5Reversing the obtained digits gets us our actual pin: 5812693370And we have our password from before, so we have all we need for our flag!Flag: pbctf{5812693370_s3cuR3_p1n_id_2_3v3ry0ne}Triviacool fact i was in fact inspiration for this challegeso thats pretty nifty i think",
                "content_html": "<p>ill add the rest later i cba rn</p><h2 id=\"gcombo---misc\">GCombo - misc</h2><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>One day I spied out my friend accessing some google form to enter his secret combination lock. Afterwards, I kept bothering him about it, and he finally decided to give the link to me. Maybe you can figure out his combo for me and get a tasty flag in return:By: theKidOfArcrania</code></pre></div></div><p><a href=\"https://docs.google.com/forms/d/e/1FAIpQLSe7sOTLHmGjmUY3iE6E7QLqeYAZDfQXsiJrz8r-ZcA_4cXNFQ/viewform\">link</a></p><h3 id=\"survey\">Survey?</h3><p>This challenge presents us with a Google Forms site. This is typical for a survey challenge, and so we start by carrying out a KPBSA (known plaintext survey blood attack). We know the flag format is <code class=\"highlighter-rouge\">pbctf{text_here}</code>, and so we search for this in the source.</p><p>Upon doing so, we see that the flag is <code class=\"highlighter-rouge\">pbctf{&lt;digits you got along the way&gt;_&lt;password&gt;}</code></p><p><img src=\"/images/pbctf2020/flagthonk.PNG\" alt=\"pls gimme flag ;-;\" /></p><p>Now, this was not the actual flag, and this is because we need to actually find these things in the Google Forms.</p><p>We see that the Google Form itself prompts us with a selection screen with a “combination lock”. This is where the actual challenge begins.</p><h3 id=\"a-quick-guide-to-google-forms\">A quick guide to Google Forms</h3><p>The whole reason why our KPBSA works is because Google Forms stores the data of the survey in the source of the html page, meaning that, if there are multiple sections to the form, you can see the oother sections before you complete the first.</p><p>Google Forms also has a functionality, which allows you to, based on a user’s response, give them a section of the survey. The challenge uses this in order to “check” our password.</p><p>But how does the form know what options lead where?</p><p>Well, if we look at the survey itself, we see that each number option has a number after it.</p><p><img src=\"/images/pbctf2020/numbers.PNG\" alt=\"cool numbers\" /></p><p>Notice how after the 5, the number is different from the rest? This means that the location is different to all the others, and we can therefore assume that “5” is the first character of our pin.</p><p>But now where do we go?</p><p>We need to find some way to figure out where this takes us, and what the number means. To do this, I’m going to do some local testing.</p><p>I created this very simple form, which only has one question. It redirects to the next section if you pick “no”, redirects back to the same section if you select “yes”, and redirects to the third section if you pick “maybe”.</p><p><img src=\"/images/pbctf2020/form.PNG\" alt=\"do you like stego\" /></p><p>We can now take a look at the public data created from this Google Form</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[null,[\"\",[[2007564277,\"is it\",null,2,[[1668954036,[[\"yes\",null,-1,null,0],[\"no\",null,1475128018,null,0],[\"maybe\",null,2106518918,null,0]],0,null,null,null,null,null,0]]],[1475128018,\"Flag\",\"wow its a flag well done\",8],[2106518918,\"i hate you\",null,8]],null,null,null,[0,0],null,[1,\"\"],\"is stego bad\",48,[null,null,null,null,0],null,null,null,null,[2]]</code></pre></div></div><p>Notice the numbers after the “no” option and “maybe” option, which should redirect us to sections 2 and 3, are the same as the numbers before the texts of those sections? Now we have a way to get where an option will lead!</p><h3 id=\"solving-the-challenge\">Solving the challenge</h3><p>Firstly, we know that the flag is the series of digits followed by some sort of password, so we start by trying to look for this password.</p><p>We, after briefly scrolling through the html, find this line.</p><p>That’s most likely our password! And notice how it also has a section number, meaning that we can trace where it came from.</p><p><img src=\"/images/pbctf2020/password.PNG\" alt=\"shiny password ooo\" /></p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>751651474 &gt; ?</code></pre></div></div><p>Searching for this number in the code, we find that it takes us to this section if we enter a “0” as the last digit of our pin.</p><p><img src=\"/images/pbctf2020/goback.PNG\" alt=\"go back\" /></p><p>Now the path is quite clear, we need to go back and retrieve all the digits by working backwards using the section numbers as our guide.</p><p>We do this to get:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>751651474 &gt; 1385363611 - digit 01385363611 &gt; 1566374398 - digit 71566374398 &gt; 46599266 - digit 346599266 &gt; 1138684813 - digit 31138684813 &gt; 1996292448 - digit 91996292448 &gt; 1737460359 - digit 61737460359 &gt; 147720654 - digit 2147720654 &gt; 1094087816 - digit 11094087816 &gt; 1114266997 - digit 81114266997 &gt; 938169490 - digit 5</code></pre></div></div><p>Reversing the obtained digits gets us our actual pin: 5812693370</p><p>And we have our password from before, so we have all we need for our flag!</p><p>Flag: <code class=\"highlighter-rouge\">pbctf{5812693370_s3cuR3_p1n_id_2_3v3ry0ne}</code></p><h3 id=\"trivia\">Trivia</h3><p>cool fact i was in fact inspiration for this challege</p><p><img src=\"/images/pbctf2020/inspirative.PNG\" alt=\"inspirative\" /></p><p>so thats pretty nifty i think</p>",
                "url": "http://localhost:4000/posts/pbctf/",
                
                                
                
                "tags": ["/ctf/crypto,/home/ctf/misc"],
                "date_published": "2020-12-06T00:00:00+00:00",
                "date_modified": "2020-12-06T00:00:00+00:00",
                
                "author":  "" 
                
            },
        
            {
                "title": "hello",
                "content_text": "welcome to my blog uh theres nothing here at the moment so enjoy your stay i guess",
                "content_html": "<p>welcome to my blog uh theres nothing here at the moment so enjoy your stay i guess</p>",
                "url": "http://localhost:4000/posts/hello/",
                
                                
                
                "tags": ["/welcome"],
                "date_published": "2020-11-30T10:18:00+00:00",
                "date_modified": "2020-11-30T10:18:00+00:00",
                
                "author":  "" 
                
            }
        
    ],
    "pages": [
            
            {
                "id": "404",
                "title": 404,
                "content_text": "  you… shouldn’t be here… you should go back",
                "content_html": "<blockquote>  <p>you… shouldn’t be here… you should go <a href=\"/\">back</a></p></blockquote>",
                "url": "http://localhost:4000/404.html",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "about me",
                "title": "about me",
                "content_text": "there is nothing more to know about me goodbye",
                "content_html": "<p>there is nothing more to know about me goodbye</p>",
                "url": "http://localhost:4000/about.html",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{    \"website_title\": \"{{ site.title | xml_escape }}\",    \"website_url\": \"{{ \"/\" | absolute_url }}\",    \"posts\": [        {% for post in site.posts %}            {                \"title\": {{ post.title | jsonify }},                \"content_text\": {{ post.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ post.content | strip_newlines | jsonify }},                \"url\": \"{{ post.url | absolute_url }}\",                {% if post.image.size > 0 %}                \"image\": {{ post.image | jsonify }},{% endif %}                {% if post.categories.size > 0 %}                \"categories\": {{ post.categories | jsonify }},{% endif %}                                {% if post.tags.size > 0 %}                \"tags\": {{ post.tags | jsonify }},{% endif %}                \"date_published\": \"{{ post.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ post.date | date_to_xmlschema }}\",                {% if post.author %}                \"author\": {% if post.author.name %} \"{{ post.author.name }}\" {% else %} \"{{ post.author }}\" {% endif %}                {% else %}                \"author\": {% if site.author.name %} \"{{ site.author.name }}\" {% else %} \"{{ site.author }}\" {% endif %}                {% endif %}            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ],    \"pages\": [            {% for page in site.pages %}            {                \"id\": {{page.title | downcase | jsonify}},                \"title\": {{ page.title | jsonify }},                \"content_text\": {{ page.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ page.content | strip_newlines | jsonify }},                \"url\": \"{{ page.url | absolute_url }}\",                \"date_published\": \"{{ page.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ page.date | date_to_xmlschema }}\"            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ]           }",
                "content_html": "{    \"website_title\": \"{{ site.title | xml_escape }}\",    \"website_url\": \"{{ \"/\" | absolute_url }}\",    \"posts\": [        {% for post in site.posts %}            {                \"title\": {{ post.title | jsonify }},                \"content_text\": {{ post.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ post.content | strip_newlines | jsonify }},                \"url\": \"{{ post.url | absolute_url }}\",                {% if post.image.size > 0 %}                \"image\": {{ post.image | jsonify }},{% endif %}                {% if post.categories.size > 0 %}                \"categories\": {{ post.categories | jsonify }},{% endif %}                                {% if post.tags.size > 0 %}                \"tags\": {{ post.tags | jsonify }},{% endif %}                \"date_published\": \"{{ post.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ post.date | date_to_xmlschema }}\",                {% if post.author %}                \"author\": {% if post.author.name %} \"{{ post.author.name }}\" {% else %} \"{{ post.author }}\" {% endif %}                {% else %}                \"author\": {% if site.author.name %} \"{{ site.author.name }}\" {% else %} \"{{ site.author }}\" {% endif %}                {% endif %}            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ],    \"pages\": [            {% for page in site.pages %}            {                \"id\": {{page.title | downcase | jsonify}},                \"title\": {{ page.title | jsonify }},                \"content_text\": {{ page.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ page.content | strip_newlines | jsonify }},                \"url\": \"{{ page.url | absolute_url }}\",                \"date_published\": \"{{ page.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ page.date | date_to_xmlschema }}\"            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ]           }",
                "url": "http://localhost:4000/api.json",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "listing of /home",
                "title": "listing of /home",
                "content_text": "{% for post in site.posts %}{{post.title}}pwd: /home{{post.tags}}{%endfor%}",
                "content_html": "{% for post in site.posts %}<a href=\"{{site.baseurl}}{{post.url}}\">{{post.title}}</a><span class=\"post-tags\">pwd: /home{{post.tags}}</span>{%endfor%}",
                "url": "http://localhost:4000/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{% if page.xsl %}{% endif %}{% assign collections = site.collections | where_exp:'collection','collection.output != false' %}{% for collection in collections %}{% assign docs = collection.docs | where_exp:'doc','doc.sitemap != false' %}{% for doc in docs %}{{ doc.url | replace:'/index.html','/' | absolute_url | xml_escape }}{% if doc.last_modified_at or doc.date %}{{ doc.last_modified_at | default: doc.date | date_to_xmlschema }}{% endif %}{% endfor %}{% endfor %}{% assign pages = site.html_pages | where_exp:'doc','doc.sitemap != false' | where_exp:'doc','doc.url != \"/404.html\"' %}{% for page in pages %}{{ page.url | replace:'/index.html','/' | absolute_url | xml_escape }}{% if page.last_modified_at %}{{ page.last_modified_at | date_to_xmlschema }}{% endif %}{% endfor %}{% assign static_files = page.static_files | where_exp:'page','page.sitemap != false' | where_exp:'page','page.name != \"404.html\"' %}{% for file in static_files %}{{ file.path | replace:'/index.html','/' | absolute_url | xml_escape }}{{ file.modified_time | date_to_xmlschema }}{% endfor %}",
                "content_html": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>{% if page.xsl %}<?xml-stylesheet type=\"text/xsl\" href=\"{{ \"/sitemap.xsl\" | absolute_url }}\"?>{% endif %}<urlset xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\" xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">{% assign collections = site.collections | where_exp:'collection','collection.output != false' %}{% for collection in collections %}{% assign docs = collection.docs | where_exp:'doc','doc.sitemap != false' %}{% for doc in docs %}<url><loc>{{ doc.url | replace:'/index.html','/' | absolute_url | xml_escape }}</loc>{% if doc.last_modified_at or doc.date %}<lastmod>{{ doc.last_modified_at | default: doc.date | date_to_xmlschema }}</lastmod>{% endif %}</url>{% endfor %}{% endfor %}{% assign pages = site.html_pages | where_exp:'doc','doc.sitemap != false' | where_exp:'doc','doc.url != \"/404.html\"' %}{% for page in pages %}<url><loc>{{ page.url | replace:'/index.html','/' | absolute_url | xml_escape }}</loc>{% if page.last_modified_at %}<lastmod>{{ page.last_modified_at | date_to_xmlschema }}</lastmod>{% endif %}</url>{% endfor %}{% assign static_files = page.static_files | where_exp:'page','page.sitemap != false' | where_exp:'page','page.name != \"404.html\"' %}{% for file in static_files %}<url><loc>{{ file.path | replace:'/index.html','/' | absolute_url | xml_escape }}</loc><lastmod>{{ file.modified_time | date_to_xmlschema }}</lastmod></url>{% endfor %}</urlset>",
                "url": "http://localhost:4000/sitemap.xml",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "Sitemap: {{ \"sitemap.xml\" | absolute_url }}",
                "content_html": "Sitemap: {{ \"sitemap.xml\" | absolute_url }}",
                "url": "http://localhost:4000/robots.txt",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{% if page.xsl %}{% endif %}Jekyll{{ site.time | date_to_xmlschema }}{{ page.url | absolute_url | xml_escape }}{% assign title = site.title | default: site.name %}{% if page.collection != \"posts\" %}{% assign collection = page.collection | capitalize %}{% assign title = title | append: \" | \" | append: collection %}{% endif %}{% if page.category %}{% assign category = page.category | capitalize %}{% assign title = title | append: \" | \" | append: category %}{% endif %}{% if title %}{{ title | smartify | xml_escape }}{% endif %}{% if site.description %}{{ site.description | xml_escape }}{% endif %}{% if site.author %}{{ site.author.name | default: site.author | xml_escape }}{% if site.author.email %}{{ site.author.email | xml_escape }}{% endif %}{% if site.author.uri %}{{ site.author.uri | xml_escape }}{% endif %}{% endif %}{% assign posts = site[page.collection] | where_exp: \"post\", \"post.draft != true\" | sort: \"date\" | reverse %}{% if page.category %}{% assign posts = posts | where: \"category\",page.category %}{% endif %}{% for post in posts limit: 10 %}{{ post.title | smartify | strip_html | normalize_whitespace | xml_escape }}{{ post.date | date_to_xmlschema }}{{ post.last_modified_at | default: post.date | date_to_xmlschema }}{{ post.id | absolute_url | xml_escape }}{% assign excerpt_only = post.feed.excerpt_only | default: site.feed.excerpt_only %}{% unless excerpt_only %}{{ post.content | strip | xml_escape }}{% endunless %}{% assign post_author = post.author | default: post.authors[0] | default: site.author %}{% assign post_author = site.data.authors[post_author] | default: post_author %}{% assign post_author_email = post_author.email | default: nil %}{% assign post_author_uri = post_author.uri | default: nil %}{% assign post_author_name = post_author.name | default: post_author %}{{ post_author_name | default: \"\" | xml_escape }}{% if post_author_email %}{{ post_author_email | xml_escape }}{% endif %}{% if post_author_uri %}{{ post_author_uri | xml_escape }}{% endif %}{% if post.category %}{% endif %}{% for tag in post.tags %}{% endfor %}{% if post.excerpt and post.excerpt != empty %}{{ post.excerpt | strip_html | normalize_whitespace | xml_escape }}{% endif %}{% assign post_image = post.image.path | default: post.image %}{% if post_image %}{% unless post_image contains \"://\" %}{% assign post_image = post_image | absolute_url %}{% endunless %}{% endif %}{% endfor %}",
                "content_html": "<?xml version=\"1.0\" encoding=\"utf-8\"?>{% if page.xsl %}<?xml-stylesheet type=\"text/xml\" href=\"{{ '/feed.xslt.xml' | absolute_url }}\"?>{% endif %}<feed xmlns=\"http://www.w3.org/2005/Atom\" {% if site.lang %}xml:lang=\"{{ site.lang }}\"{% endif %}><generator uri=\"https://jekyllrb.com/\" version=\"{{ jekyll.version }}\">Jekyll</generator><link href=\"{{ page.url | absolute_url }}\" rel=\"self\" type=\"application/atom+xml\" /><link href=\"{{ '/' | absolute_url }}\" rel=\"alternate\" type=\"text/html\" {% if site.lang %}hreflang=\"{{ site.lang }}\" {% endif %}/><updated>{{ site.time | date_to_xmlschema }}</updated><id>{{ page.url | absolute_url | xml_escape }}</id>{% assign title = site.title | default: site.name %}{% if page.collection != \"posts\" %}{% assign collection = page.collection | capitalize %}{% assign title = title | append: \" | \" | append: collection %}{% endif %}{% if page.category %}{% assign category = page.category | capitalize %}{% assign title = title | append: \" | \" | append: category %}{% endif %}{% if title %}<title type=\"html\">{{ title | smartify | xml_escape }}</title>{% endif %}{% if site.description %}<subtitle>{{ site.description | xml_escape }}</subtitle>{% endif %}{% if site.author %}<author><name>{{ site.author.name | default: site.author | xml_escape }}</name>{% if site.author.email %}<email>{{ site.author.email | xml_escape }}</email>{% endif %}{% if site.author.uri %}<uri>{{ site.author.uri | xml_escape }}</uri>{% endif %}</author>{% endif %}{% assign posts = site[page.collection] | where_exp: \"post\", \"post.draft != true\" | sort: \"date\" | reverse %}{% if page.category %}{% assign posts = posts | where: \"category\",page.category %}{% endif %}{% for post in posts limit: 10 %}<entry{% if post.lang %}{{\" \"}}xml:lang=\"{{ post.lang }}\"{% endif %}><title type=\"html\">{{ post.title | smartify | strip_html | normalize_whitespace | xml_escape }}</title><link href=\"{{ post.url | absolute_url }}\" rel=\"alternate\" type=\"text/html\" title=\"{{ post.title | xml_escape }}\" /><published>{{ post.date | date_to_xmlschema }}</published><updated>{{ post.last_modified_at | default: post.date | date_to_xmlschema }}</updated><id>{{ post.id | absolute_url | xml_escape }}</id>{% assign excerpt_only = post.feed.excerpt_only | default: site.feed.excerpt_only %}{% unless excerpt_only %}<content type=\"html\" xml:base=\"{{ post.url | absolute_url | xml_escape }}\">{{ post.content | strip | xml_escape }}</content>{% endunless %}{% assign post_author = post.author | default: post.authors[0] | default: site.author %}{% assign post_author = site.data.authors[post_author] | default: post_author %}{% assign post_author_email = post_author.email | default: nil %}{% assign post_author_uri = post_author.uri | default: nil %}{% assign post_author_name = post_author.name | default: post_author %}<author><name>{{ post_author_name | default: \"\" | xml_escape }}</name>{% if post_author_email %}<email>{{ post_author_email | xml_escape }}</email>{% endif %}{% if post_author_uri %}<uri>{{ post_author_uri | xml_escape }}</uri>{% endif %}</author>{% if post.category %}<category term=\"{{ post.category | xml_escape }}\" />{% endif %}{% for tag in post.tags %}<category term=\"{{ tag | xml_escape }}\" />{% endfor %}{% if post.excerpt and post.excerpt != empty %}<summary type=\"html\">{{ post.excerpt | strip_html | normalize_whitespace | xml_escape }}</summary>{% endif %}{% assign post_image = post.image.path | default: post.image %}{% if post_image %}{% unless post_image contains \"://\" %}{% assign post_image = post_image | absolute_url %}{% endunless %}<media:thumbnail xmlns:media=\"http://search.yahoo.com/mrss/\" url=\"{{ post_image | xml_escape }}\" /><media:content medium=\"image\" url=\"{{ post_image | xml_escape }}\" xmlns:media=\"http://search.yahoo.com/mrss/\" />{% endif %}</entry>{% endfor %}</feed>",
                "url": "http://localhost:4000/feed.xml",
                "date_published": "",
                "date_modified": ""
            }
        
    ]           
}